:- module("pretty").
:- module_interface.

:- ensure_loaded("lillib/lists").

% pretty(+$value).
%   pretty prints to standard output
pretty <- [pred].

% pretty_to(+$stream, +$value).
%   pretty prints to a stream
pretty_to <- [pred].

% pretty_feat(+$value, $feat).
%   pretty prints a selected feature to standard output
pretty_feat <- [pred].

% pretty_feat_to(+$stream, +$value, +$feat).
%   pretty prints a selected feature to a stream
pretty_feat_to <- [pred].



:- module_implementation.

to_pretty <- [pred].

default <- [pred].
default($value, $feature) :-
  type_copy($value, $copy),
  follow($copy, $feature, $default_type),
  follow($value, $feature, $feature_value),
  equivalent($feature_value, $default_type).

non_default_features <- [pred].
non_default_features($value, $features) :-
  findall(
    $feature,
    (
      type_featurelist($value, $features),
      member($feature, $features),
      \+ default($value, $feature)
    ),
    $features).

get_index <- [pred].
get_index($shared, $value, $index, $visited) :-
  member([$shared_value, $index, $visited], $shared),
  identical($shared_value, $value), !.

is_multiline <- [pred].
is_multiline($str) :-
  strtolist($str, $list),
  member(10, $list).

indent <- [pred].
indent(0, $newline) :- !,
  listtostr([10], $newline).
indent($indent, $spaces) :-
  $subindent is $indent - 1,
  indent($subindent, $subspaces),
  strcat($subspaces, "  ", $spaces).

add_index <- [pred].
add_index($shared, $value, $str, $indexed) :-
  get_index($shared, $value, $index, $visited), !,
  (equivalent($visited, bot)
    ->  (
          $visited = 1,
          strcat($index, " & ", $spaced),
          strcat($spaced, $str, $indexed)
        )
    ;   $indexed = $index).
add_index(_, _, $str, $str).

format_line <- [pred].
format_line($spaces, $line, $header, $str) :-
  strcat($header, $line, $headered),
  strcat($headered, $spaces, $str).

format_lines <- [pred].
format_lines(_, [], _, "").
format_lines($spaces, [$line | $lines], $header, $str) :-
  format_line($spaces, $line, $header, $formatted_first),
  format_lines($spaces, $lines, $header, $formatted_rest),
  strcat($formatted_first, $formatted_rest, $str).

format_complex <- [pred].
format_complex($lines, $indent, $head, $separator, $tail, $str) :-
  $lines = [$first | $rest],
  indent($indent, $spaces),
  format_line($spaces, $first, $head, $indented_first),
  format_lines($spaces, $rest, $separator, $indented_rest),
  strcat($indented_first, $indented_rest, $unclosed),
  strcat($unclosed, $tail, $str).

newline_if_complex <- [pred].
newline_if_complex($str, $next_spaces, $newlined) :-
  is_multiline($str), !,
  strcat($str, $next_spaces, $newlined).
newline_if_complex($str, _, $str).

to_pretty_fs_inner <- [pred].
to_pretty_fs_inner(_, [], _, _, _, []).
to_pretty_fs_inner($value, [$feature | $features], $indent, $spaces, $shared, $lines) :-
  default($value, $feature), !,
  to_pretty_fs_inner($value, $features, $indent, $spaces, $shared, $lines).
to_pretty_fs_inner($value, [$feature | $features], $indent, $spaces, $shared, [$line | $lines]) :-
  feattostr($feature, $feature_name),
  follow($value, $feature, $feature_value),
  strcat($feature_name, "\", $backslashed),
  $next_indent is $indent + 1,
  to_pretty($feature_value, $next_indent, $feature_pretty, $shared),
  newline_if_complex($backslashed, $spaces, $newlined),
  strcat($newlined, $feature_pretty, $line),
  to_pretty_fs_inner($value, $features, $indent, $spaces, $shared, $lines).

pretty_list_inner <- [pred].
pretty_list_inner([], _, _, []).
pretty_list_inner([$head | $tail], $indent, $shared, [$linehead | $linetail]) :-
  to_pretty($head, $indent, $linehead, $shared),
  pretty_list_inner($tail, $indent, $shared, $linetail).

pretty_list <- [pred].
pretty_list($shared, $value, $indent, $str) :-
  $next_indent is $indent + 1,
  pretty_list_inner($value, $next_indent, $shared, $lines),
  format_complex($lines, $indent, "[ ", ", ", "]", $str).

add_index_to_list <- [pred].
add_index_to_list($shared, $value, $indent, $str) :-
  get_index($shared, $value, $index, $visited), !,
  (equivalent($visited, bot)
    ->  (
          $visited = 1,
          $next_indent is $indent + 1,
          pretty_list($shared, $value, $next_indent, $stringified),
          format_complex([$index, $stringified], $indent, "( ", "& ", ")", $stringified),
          (is_multiline($stringified)
            ->  $str = $stringified
            ;   (
                  strcat($index, " & ", $ampersanded),
                  strcat($ampersanded, $stringified, $str)
                )
          )
        )
    ;   $str = $index).
add_index_to_list($shared, $value, $indent, $str) :-
  pretty_list($shared, $value, $indent, $str).

to_pretty($value, _, $str, $shared) :- % bot
  equivalent($value, bot), !,
  add_index($shared, $value, "bot", $str).
to_pretty($value, _, $str, $shared) :- % integer
  is_integer($value), !,
  inttostr($value, $stringified),
  add_index($shared, $value, $stringified, $str).
to_pretty($value, _, $str, $shared) :- % float
  is_float($value), !,
  floattostr($value, $stringified),
  add_index($shared, $value, $stringified, $str).
to_pretty($value, _, $str, $shared) :- % string
  is_string($value), !,
  listtostr([34], $quote),
  strcat($quote, $value, $unclosed),
  strcat($unclosed, $quote, $stringified),
  add_index($shared, $value, $stringified, $str).
to_pretty($value, _, $str, $shared) :- % list type
  equivalent($value, list), !,
  add_index($shared, $value, "list", $str).
to_pretty($value, _, $str, $shared) :- % nil (empty list)
  equivalent($value, nil), !,
  add_index($shared, $value, "[]", $str).
to_pretty($value, _, $str, $shared) :- % list, 1 simple element
  $value = [$element],
  to_pretty($element, 0, $pretty, $shared),
  \+ is_multiline($pretty),
  strcat("[ ", $pretty, $unclosed),
  strcat($unclosed, " ]", $stringified),
  add_index($shared, $value, $stringified, $str).
to_pretty($value, $indent, $str, $shared) :- % list
  type_toptype($value, cons), !,
  add_index_to_list($shared, $value, $indent, $str).
to_pretty($value, $indent, $str, $shared) :- % feature structure, 1 feature
  type_featurelist($value, [ $feature ]), !,
  feattostr($feature, $feature_name),
  follow($value, $feature, $feature_value),
  to_pretty($feature_value, $indent, $feature_pretty, $shared),
  strcat($feature_name, "\", $backslashed),
  strcat($backslashed, $feature_pretty, $str).
to_pretty($value, $indent, $str, $shared) :- % feature structure
  type_nfeature($value, $num_features),
  $num_features > 1, !,
  $next_indent is $indent + 1,
  indent($next_indent, $next_spaces),
  type_featurelist($value, $features),
  (get_index($shared, $value, $index, $visited)
    % shared
    ->  (equivalent($visited, bot)
          ->  (
                $visited = 1,
                to_pretty_fs_inner($value, $features, $indent, $next_spaces, $shared, $lines),
                ($lines = []
                  % default
                  ->  (
                        type_toptype($value, $type),
                        typetostr($type, $stringified),
                        add_index($shared, $value, $stringified, $str)
                      )
                  ;   ($lines = [$stringified]
                        ->  add_index($shared, $value, $stringified, $str)
                        ;   (
                              $indexed_lines = [$index | $lines],
                              format_complex($indexed_lines, $indent, "( ", "& ", ")", $str)
                            )
                      )
                )
              )
          ;   $str = $index
        )
    % not shared
    ;   (
          to_pretty_fs_inner($value, $features, $indent, $next_spaces, $shared, $lines),
          ($lines = []
            % default
            ->  (
                  type_toptype($value, $type),
                  typetostr($type, $str)
                )
            ;   ($lines = [$str]
                  ->  true
                  ;   (
                        format_complex($lines, $indent, "( ", "& ", ")", $unindented),
                        indent($indent, $spaces),
                        strcat($spaces, $unindented, $str)
                      )
                )
          )
        )
  ).
to_pretty($value, _, $str, $shared) :- % plain type
  type_toptype($value, $type),
  typetostr($type, $stringified),
  add_index($shared, $value, $stringified, $str).
  


string_index_list <- [pred].
string_index_list([], _, []).
string_index_list([$head | $tail], $index, [[$head, $dollared, bot] | $indexed_tail]) :-
  inttostr($index, $stringified),
  strcat("$", $stringified, $dollared),
  $next_index is $index + 1,
  string_index_list($tail, $next_index, $indexed_tail).

pretty_to($stream, $value) :-
  sharednodelist($value, $shared),
  string_index_list($shared, 0, $indexed),
  to_pretty($value, 0, $str, $indexed),
  writeln_string($stream, $str).

pretty($value) :-
  stdout_stream($stdout),
  pretty_to($stdout, $value).

pretty_feat_to($stream, $value, $feat) :-
  follow($value, $feat, $feat_value),
  pretty_to($stream, $feat_value).

pretty_feat($value, $feat) :-
  follow($value, $feat, $feat_value),
  pretty($feat_value).
