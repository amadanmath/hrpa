:- module("lexe").
:- module_interface.

:- ensure_loaded("types").
:- ensure_loaded("grammar").

lexe <- [pred].

:- module_implementation.


% PREPOSITIONS

% up to, to
lexe("do",
  SYNSEM\LOCAL\CAT\
  ( HEAD\PFORM\do_gen
  & VAL\COMPS\[ CAT\HEAD\CASE\gen ]
  )
& WORDORDER\WO_CLITIC\proclitic
).

% in, inside
lexe("u",
  SYNSEM\LOCAL\CAT\
  ( HEAD\PFORM\$pform
  & VAL\COMPS\[ CAT\HEAD\CASE\$case ]
  )
& WORDORDER\WO_CLITIC\proclitic
) :-
  member([$pform, $case],
    [ [u_loc, loc]
    , [u_acc, acc]
    , [u_gen, gen]
    ]).

% towards
lexe($phon,
  SYNSEM\LOCAL\CAT\
  ( HEAD\PFORM\k_loc
  & VAL\COMPS\[ CAT\HEAD\(noun_like & CASE\loc) ]
  )
& WORDORDER\WO_CLITIC\proclitic
) :-
  % TODO rules for selection
  $phon = "k";
  $phon = "ka".

% like
lexe("poput",
  SYNSEM\LOCAL\CAT\
  ( HEAD\PFORM\poput_gen
  & VAL\
    ( COMPS\
      [ ( MAND\plus
        & CAT\HEAD\
          ( noun_like
          & CASE\gen
          )
        )
      ]
    & MOD\[ CAT\HEAD\$mod ]
    )
  )
& WORDORDER\WO_CLITIC\proclitic
) :-
  member($mod, [adverb, adjective, noun_like, verb]).

% ADVERBS

% today
lexe("danas",
  SYNSEM\LOCAL\CAT\
  ( HEAD\adverb
  & VAL\MOD\[ CAT\HEAD\PREDICATE\plus ]
  )
).

% very
% TODO: replace MOD\adjective with MOD\gradable
% because it can be certain adverbs too
% and maybe kick verb out
lexe("jako",
  SYNSEM\LOCAL\CAT\
  ( HEAD\adverb
  & VAL\MOD\[ CAT\HEAD\$mod ]
  )
) :-
  member($mod, [adjective, verb]).

% CONJUNCTIONS

% because
lexe("jer",
  SYNSEM\LOCAL\CAT\
  ( HEAD\(conj & SCRAMBLES\minus)
  & VAL\
    ( COMPS\[ CAT\CLAUSE\plus & MAND\plus ]
    & MOD\[ CAT\HEAD\PREDICATE\plus ]
    )
  )
& WORDORDER\WO_HOST\plus
).
