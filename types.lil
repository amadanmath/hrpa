:- module("types").
:- module_interface.

bool <- [bot].
plus <- [bool].
minus <- [bool].

slash <- [bot]. % TODO add here!

% phrase

head <- [bot] + [PREDICATE\bool].
val <- [bot] + [SUBJ\list, SPR\list, COMPS\list, MOD\list, AUX\list].
cat <- [bot] + [HEAD\head, VAL\val, CLITIC\bool].
cont <- [bot] + [RELS\list, HCONS\list].
local <- [bot] + [CAT\cat, CONT\cont]. % CONT, CTX
stores <- [bot] + [CLSTORE\list]. % QSTORE
nonlocal <- [bot] + [INHER\stores, TOBIND\stores]. % TODO
synsem <- [bot] + [MAND\bool, LOCAL\local, NONLOCAL\nonlocal]. % EXPR
sign <- [bot] + [PHONOLOGY\list, LEXICON\list, SYNSEM\synsem].

schema <- [bot].
head_comp_schema <- [schema].
head_mod_schema <- [schema].
head_verb_schema <- [schema].
head_cl_schema <- [schema].
head_mark_schema <- [schema].

head_str <- [bot] + [HEAD_DTR\sign].
head_comp_str <- [head_str] + [COMP_DTR\sign].
head_mod_str <- [head_str] + [MOD_DTR\sign].
head_verb_str <- [head_str] + [VERB_DTR\sign].
head_cl_str <- [head_str] + [CL_DTR\sign].
head_mark_str <- [head_str] + [MARK_DTR\sign].

phrase <- [sign].
binary_phrase <- [phrase] + [DTRS\head_str].
unary_phrase <- [phrase] + [DTR\sign].
word <- [sign].

case <- [bot].
nom <- [case].
gen <- [case].
dat <- [case].
acc <- [case].
voc <- [case].
loc <- [case].
ins <- [case].
has_case <- [head] + [CASE\case].

gender <- [bot].
masculine <- [gender].
feminine <- [gender].
neuter <- [gender].

number <- [bot].
singular <- [number].
plural <- [number].

person <- [bot].
first <- [person].
second <- [person].
third <- [person].

degree <- [bot].
pos <- [degree].
comp <- [degree]. % not a complement here! comparative!
sup <- [degree].
has_degree <- [head] + [DEGREE\degree].

ntype <- [bot].
common <- [ntype].
proper <- [ntype].

% TODO maybe remove
%vtype <- [bot].
%main <- [vtype].
%aux <- [vtype].
%modal <- [vtype].
%copula <- [vtype].

mood <- [bot].
indicative <- [mood].
imperative <- [mood].
conditional <- [mood].
infinitive <- [mood].
participle <- [mood].
% participle is a different category.

ptype <- [bot].
pron_personal <- [ptype].
pron_demonstrative <- [ptype].
pron_indefinite <- [ptype].
pron_possessive <- [ptype].
pron_interrogative <- [ptype].
pron_relative <- [ptype].
pron_reflexive <- [ptype].

rtype <- [bot].
part_negative <- [rtype].
part_interrogative <- [rtype].
part_modal <- [rtype].
part_affirmative <- [rtype].

reftype <- [bot].
ref_pers <- [reftype].
ref_poss <- [reftype].

tense <- [bot].
present <- [tense].
imperfect <- [tense].
future1 <- [tense].
future2 <- [tense].
perfect <- [tense].
pluperfect <- [tense].
aorist <- [tense].

voice <- [bot].
active <- [voice].
passive <- [voice].

% CLITIC GROUP ORDER
clitic <- [bot].
cl_qm <- [clitic].
cl_aux <- [cl_qm].
cl_dat <- [cl_aux].
cl_accgen <- [cl_dat].
cl_self <- [cl_accgen].
cl_aux3 <- [cl_self].

has_anim <- [head] + [ANIMATE\bool].
has_def <- [head] + [DEFINITE\bool].
has_pol <- [head] + [POLAR\bool].

has_cd <- [head, has_case, has_def]. % case, def
has_cdd <- [head, has_degree, has_cd]. % case, def, degree

noun_like <- [head, has_case, has_anim]. % case, anim
adj_like <- [head, has_cdd].
adv_like <- [head, has_degree, has_pol].

% TODO add more preposition forms, together with lexicon
pform <- [bot].
do_gen <- [pform].
u_loc <- [pform].
u_acc <- [pform].
u_gen <- [pform].
k_loc <- [pform].




tam <- [bot] + [TENSE\tense, MOOD\mood, VOICE\voice, FINITE\bool].
index <- [bot] + [PERSON\person, NUMBER\number, GENDER\gender].
event <- [cont] + [TAM\tam].
objref <- [cont] + [INDEX\index].

% POS

noun <- [head, noun_like].
adjective <- [head, adj_like].
adverb <- [head, adv_like].
verb <- [head].
sverb <- [verb]. % subject is the first complement - subject agreement
nsverb <- [verb]. % subject is not the first complement - no agreement
prep <- [head] + [PFORM\pform]. % there might be more :)
particle <- [head] + [RTYPE\rtype]. % TODO check for RTYPE...

%pro <- [head] + [PTYPE\ptype, REFTYPE\reftype]. % TODO check for PTYPE, REFTYPE
%pro_degree <- [pro, has_degree].
%pro_cd <- [pro_degree, has_cd]. % case, def
%pro_noun <- [head, pro_dcgnp, noun_like].
%pro_adj <- [head, adj_like].
%pro_adv <- [head, adv_like].

:- module_implementation.
